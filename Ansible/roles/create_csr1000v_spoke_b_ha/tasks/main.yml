---
- name: "Test Show Running Configuration"
  ios_command:
    provider: "{{cli}}"
    commands: show running-config
  register: command_result
  retries: 60
  delay: 10
  until: command_result | success
- name: Generate Configuration and Install
  ios_config:
    provider: "{{cli}}"
    src:      "spoke_b_ha.j2"
- name: "Run EEM Script(NOTE - This will Report as Failed as VRF assignment will temporarily cause loss of IP connectivity)"
  ios_command:
    provider: "{{cli}}"
    commands: event manager run fvrf
  ignore_errors: true
- name: "Test connectivity"
  ios_command:
    provider: "{{cli}}"
    commands: show running-config
  register: command_result
  retries: 60
  delay: 10
  until: command_result | success
- name: "No shutdown interface GigabitEthernet2"
  ios_config:
    provider: "{{cli}}"
    parents:
      - "interface GigabitEthernet2"
    lines:
      - "no shutdown"
- name: "Remove now moot due to VRF default static route"
  ios_config:
    provider: "{{cli}}"
    lines:
      - "no ip route 0.0.0.0 0.0.0.0 GigabitEthernet1 {{router_b_addressg1NH}}"
- name: "Configure internet-vrf call-home DNS and misc"
  ios_config:
    provider: "{{cli}}"
    lines:
      - "ip name-server vrf internet-vrf 208.67.222.222"
      - "ip http client source-interface GigabitEthernet1"
      - "ip domain lookup vrf internet-vrf source-interface GigabitEthernet1"
- name: "Configure call-home parameters"
  ios_config:
    provider: "{{cli}}"
    parents:
      - "call-home"
    lines:
      - "contact-email-addr {{email}}"
      - "vrf internet-vrf"
- name: "Configure call-home profile"
  ios_config:
    provider: "{{cli}}"
    parents:
      - "call-home"
      - "profile CiscoTAC-1"
    lines:
      - "active"
      - "destination transport-method http"
      - "destination address http https://tools.cisco.com/its/service/oddce/services/DDCEService"
- name: "Configure call-home and smart licensing"
  ios_config:
    provider: "{{cli}}"
    lines:
      - "service call-home"
      - "license smart enable"
- name: "Add smart licensing token"
  ios_command:
    provider: "{{cli}}"
    commands: license smart register idtoken {{licenseidtoken}}
- name: "Is CSR1000v Registered?"
  ios_command:
    provider: "{{cli}}"
    commands: show license status
  register: command_result
  retries: 5
  delay: 10
  until: command_result.stdout_lines[0][3].find(" REGISTERED") != -1
- name: "Configure throughput level"
  ios_config:
    provider: "{{cli}}"
    lines:
      - "platform hardware throughput level MB 1000"
- name: "copy run start"
  ios_command:
    provider: "{{cli}}"
    commands: wr mem